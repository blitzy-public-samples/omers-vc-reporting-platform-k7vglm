# Configuration file for Alembic, the database migration tool used in the backend application.
# It defines settings for the migration environment, script generation, and logging.
# This file addresses the following requirements:
# - Database Migration (3. SYSTEM DESIGN/3.2 DATABASE DESIGN)
# - Data Storage (1.2 Scope/Core Functionalities/1. Data Storage)

# Alembic Configuration
[alembic]
# Path to migration scripts
script_location = migrations

# Template used to generate migration files
# Format: YYYY_MM_DD_HHMM-<revision>_<slug>
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# Prepend the current directory to sys.path
prepend_sys_path = .

# Use OS-specific path separator in version files
version_path_separator = os

# Set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

# Post-write hooks
[post_write_hooks]
# Run Black code formatter after generating migration scripts
hooks = black
black.type = console_scripts
black.entrypoint = black
black.options = -l 79 REVISION_SCRIPT_FILENAME

# Note: The actual database connection string is not stored here for security reasons.
# It is instead retrieved from the application's configuration in the env.py file.
# sqlalchemy.url = driver://user:pass@localhost/dbname

# Uncomment and update the following line to set the database URL directly (not recommended for production)
# sqlalchemy.url = postgresql://user:password@localhost/dbname

# Uncomment and set to 'true' to enable SQL query logging (useful for debugging)
# echo = true

# Uncomment and set to 'true' to enable auto-generating migrations
# compare_type = true
# compare_server_default = true

# Uncomment and set to 'true' to allow Alembic to create new tables
# create_table = true

# Uncomment and set to 'true' to allow Alembic to drop existing tables
# drop_table = true

# Uncomment and set to 'true' to allow Alembic to rename existing tables
# rename_table = true

# Uncomment and set to 'true' to allow Alembic to modify existing columns
# modify_column = true

# Uncomment and set to 'true' to allow Alembic to drop existing columns
# drop_column = true

# Uncomment and set to 'true' to allow Alembic to rename existing columns
# rename_column = true

# Uncomment and set to 'true' to allow Alembic to create new indexes
# create_index = true

# Uncomment and set to 'true' to allow Alembic to drop existing indexes
# drop_index = true

# Uncomment and set to 'true' to allow Alembic to rename existing indexes
# rename_index = true

# Uncomment and set to 'true' to allow Alembic to create new constraints
# create_constraint = true

# Uncomment and set to 'true' to allow Alembic to drop existing constraints
# drop_constraint = true

# Uncomment and set to 'true' to allow Alembic to rename existing constraints
# rename_constraint = true